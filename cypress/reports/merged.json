{
  "stats": {
    "suites": 45,
    "tests": 65,
    "passes": 64,
    "pending": 1,
    "failures": 0,
    "testsRegistered": 65,
    "passPercent": 98.46153846153847,
    "pendingPercent": 1.5384615384615385,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-29T06:44:11.474Z",
    "end": "2025-08-29T07:39:14.496Z",
    "duration": 3303022
  },
  "results": [
    {
      "uuid": "5fb6a00d-4146-47bf-85aa-873efb7f2265",
      "title": "",
      "fullFile": "cypress/e2e/actions-page.cy.js",
      "file": "cypress/e2e/actions-page.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d04d79c1-53ff-4098-bee5-f55bd950d010",
          "title": "Page Object example - Actions page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form using Page Object",
              "fullTitle": "Page Object example - Actions page fill form using Page Object",
              "timedOut": null,
              "duration": 1415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.fillCredentials(this.userData.email, this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);\nactionsPage.submitForm();\nactionsPage.checkSubmitButton();",
              "err": {},
              "uuid": "7e2c4a54-1290-4456-a812-226129ed90a4",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is enabled by default",
              "fullTitle": "Page Object example - Actions page should detect Submit button is enabled by default",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "cb4cc726-b2d9-4878-b8ba-c009b2e5d12f",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is disabled after simulation",
              "fullTitle": "Page Object example - Actions page should detect Submit button is disabled after simulation",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});",
              "err": {},
              "uuid": "858e0bcf-338e-4266-afd6-b4d8de1972a6",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should enable Submit button after disabling it",
              "fullTitle": "Page Object example - Actions page should enable Submit button after disabling it",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});\nactionsPage.enableSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "cca3c530-794f-4cd2-9d4e-2f8e28169f29",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e2c4a54-1290-4456-a812-226129ed90a4",
            "cb4cc726-b2d9-4878-b8ba-c009b2e5d12f",
            "858e0bcf-338e-4266-afd6-b4d8de1972a6",
            "cca3c530-794f-4cd2-9d4e-2f8e28169f29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "edad501d-a390-4a2c-b766-f2d1f10e6c21",
      "title": "",
      "fullFile": "cypress/e2e/alias-intercept.cy.js",
      "file": "cypress/e2e/alias-intercept.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ad35a52-b84e-45be-8c46-dccec98e8707",
          "title": "Alias example - intercept request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses alias for GET request and validates response + UI",
              "fullTitle": "Alias example - intercept request uses alias for GET request and validates response + UI",
              "timedOut": null,
              "duration": 1686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\ncy.intercept('GET', '**/comments/*').as('getComment');\ncy.contains('Get Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\ncy.wait('@getComment', {\n  timeout: 10000\n}).its('response.statusCode').should('eq', 200);\ncy.get('.network-comment').should('not.be.empty');",
              "err": {},
              "uuid": "09a59dbd-a22d-401f-ac04-58266479e6b1",
              "parentUUID": "6ad35a52-b84e-45be-8c46-dccec98e8707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09a59dbd-a22d-401f-ac04-58266479e6b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4a42828-48f1-497b-ace8-9860e3dbc12d",
      "title": "",
      "fullFile": "cypress/e2e/actions-page.cy.js",
      "file": "cypress/e2e/actions-page.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
          "title": "Page Object example - Actions page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form using Page Object",
              "fullTitle": "Page Object example - Actions page fill form using Page Object",
              "timedOut": null,
              "duration": 1227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.fillCredentials(this.userData.email, this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);\nactionsPage.submitForm();\nactionsPage.checkSubmitButton();",
              "err": {},
              "uuid": "3ed954df-19be-495b-bc0c-f1c57a837dc0",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is enabled by default",
              "fullTitle": "Page Object example - Actions page should detect Submit button is enabled by default",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "a129a30f-5b86-42a4-b506-e7e60bb99865",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is disabled after simulation",
              "fullTitle": "Page Object example - Actions page should detect Submit button is disabled after simulation",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});",
              "err": {},
              "uuid": "75ab2c94-407b-4977-aa99-157fc04a2837",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should enable Submit button after disabling it",
              "fullTitle": "Page Object example - Actions page should enable Submit button after disabling it",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});\nactionsPage.enableSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "5ae42857-b891-4449-bb9b-9a81de1c9b31",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ed954df-19be-495b-bc0c-f1c57a837dc0",
            "a129a30f-5b86-42a4-b506-e7e60bb99865",
            "75ab2c94-407b-4977-aa99-157fc04a2837",
            "5ae42857-b891-4449-bb9b-9a81de1c9b31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1695,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5fb6a00d-4146-47bf-85aa-873efb7f2265",
      "title": "",
      "fullFile": "cypress/e2e/actions-page.cy.js",
      "file": "cypress/e2e/actions-page.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d04d79c1-53ff-4098-bee5-f55bd950d010",
          "title": "Page Object example - Actions page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form using Page Object",
              "fullTitle": "Page Object example - Actions page fill form using Page Object",
              "timedOut": null,
              "duration": 1415,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.fillCredentials(this.userData.email, this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);\nactionsPage.submitForm();\nactionsPage.checkSubmitButton();",
              "err": {},
              "uuid": "7e2c4a54-1290-4456-a812-226129ed90a4",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is enabled by default",
              "fullTitle": "Page Object example - Actions page should detect Submit button is enabled by default",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "cb4cc726-b2d9-4878-b8ba-c009b2e5d12f",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is disabled after simulation",
              "fullTitle": "Page Object example - Actions page should detect Submit button is disabled after simulation",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});",
              "err": {},
              "uuid": "858e0bcf-338e-4266-afd6-b4d8de1972a6",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should enable Submit button after disabling it",
              "fullTitle": "Page Object example - Actions page should enable Submit button after disabling it",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});\nactionsPage.enableSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "cca3c530-794f-4cd2-9d4e-2f8e28169f29",
              "parentUUID": "d04d79c1-53ff-4098-bee5-f55bd950d010",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e2c4a54-1290-4456-a812-226129ed90a4",
            "cb4cc726-b2d9-4878-b8ba-c009b2e5d12f",
            "858e0bcf-338e-4266-afd6-b4d8de1972a6",
            "cca3c530-794f-4cd2-9d4e-2f8e28169f29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "edad501d-a390-4a2c-b766-f2d1f10e6c21",
      "title": "",
      "fullFile": "cypress/e2e/alias-intercept.cy.js",
      "file": "cypress/e2e/alias-intercept.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ad35a52-b84e-45be-8c46-dccec98e8707",
          "title": "Alias example - intercept request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses alias for GET request and validates response + UI",
              "fullTitle": "Alias example - intercept request uses alias for GET request and validates response + UI",
              "timedOut": null,
              "duration": 1686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\ncy.intercept('GET', '**/comments/*').as('getComment');\ncy.contains('Get Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\ncy.wait('@getComment', {\n  timeout: 10000\n}).its('response.statusCode').should('eq', 200);\ncy.get('.network-comment').should('not.be.empty');",
              "err": {},
              "uuid": "09a59dbd-a22d-401f-ac04-58266479e6b1",
              "parentUUID": "6ad35a52-b84e-45be-8c46-dccec98e8707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09a59dbd-a22d-401f-ac04-58266479e6b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "286e996f-7d07-4c7d-bf10-82bd225365b4",
      "title": "",
      "fullFile": "cypress/e2e/actions-page.cy.js",
      "file": "cypress/e2e/actions-page.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a88bbfc6-3676-4e74-82a4-b402b921d52b",
          "title": "Page Object example - Actions page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form using Page Object",
              "fullTitle": "Page Object example - Actions page fill form using Page Object",
              "timedOut": null,
              "duration": 1074,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.fillCredentials(this.userData.email, this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);\nactionsPage.submitForm();\nactionsPage.checkSubmitButton();",
              "err": {},
              "uuid": "d8b7eced-a8c4-4846-a547-5b0b5bed8dea",
              "parentUUID": "a88bbfc6-3676-4e74-82a4-b402b921d52b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is enabled by default",
              "fullTitle": "Page Object example - Actions page should detect Submit button is enabled by default",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "f57bda37-447d-45e4-898f-56f226c268e3",
              "parentUUID": "a88bbfc6-3676-4e74-82a4-b402b921d52b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is disabled after simulation",
              "fullTitle": "Page Object example - Actions page should detect Submit button is disabled after simulation",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});",
              "err": {},
              "uuid": "0948c4a1-c79b-41aa-ba92-73d6f593c6a6",
              "parentUUID": "a88bbfc6-3676-4e74-82a4-b402b921d52b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should enable Submit button after disabling it",
              "fullTitle": "Page Object example - Actions page should enable Submit button after disabling it",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});\nactionsPage.enableSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "522a39b3-ff39-4dde-b2f3-54b0e0cde61b",
              "parentUUID": "a88bbfc6-3676-4e74-82a4-b402b921d52b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8b7eced-a8c4-4846-a547-5b0b5bed8dea",
            "f57bda37-447d-45e4-898f-56f226c268e3",
            "0948c4a1-c79b-41aa-ba92-73d6f593c6a6",
            "522a39b3-ff39-4dde-b2f3-54b0e0cde61b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1498,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b5448b5a-0fff-4bb8-945d-f9b70e99dc8b",
      "title": "",
      "fullFile": "cypress/e2e/alias-dom.cy.js",
      "file": "cypress/e2e/alias-dom.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "94b99308-2a5c-4436-af3f-01ad9c18a1ba",
          "title": "Alias example - DOM element",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses alias for email field multiple times",
              "fullTitle": "Alias example - DOM element uses alias for email field multiple times",
              "timedOut": null,
              "duration": 877,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').as('emailField');\ncy.get('@emailField').type('alias@example.pl').should('have.value', 'alias@example.pl');\ncy.get('@emailField').clear().type('email@example.com').should('have.value', 'email@example.com');",
              "err": {},
              "uuid": "ffa18221-4894-42bf-9c1e-ea10e267c34a",
              "parentUUID": "94b99308-2a5c-4436-af3f-01ad9c18a1ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffa18221-4894-42bf-9c1e-ea10e267c34a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "94f10b71-5a13-427b-bfed-4551e81fed68",
      "title": "",
      "fullFile": "cypress/e2e/alias-intercept.cy.js",
      "file": "cypress/e2e/alias-intercept.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1105858-f75a-46c6-9945-1ad65952f2a0",
          "title": "Alias example - intercept request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses alias for GET request and validates response + UI",
              "fullTitle": "Alias example - intercept request uses alias for GET request and validates response + UI",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\ncy.intercept('GET', '**/comments/*').as('getComment');\ncy.contains('Get Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\ncy.wait('@getComment', {\n  timeout: 10000\n}).its('response.statusCode').should('eq', 200);\ncy.get('.network-comment').should('not.be.empty');",
              "err": {},
              "uuid": "8d39b118-710f-4c27-a411-7b900f6c7ace",
              "parentUUID": "c1105858-f75a-46c6-9945-1ad65952f2a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d39b118-710f-4c27-a411-7b900f6c7ace"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 883,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8039a5e2-83d3-46fb-ba34-679c45efe40a",
      "title": "",
      "fullFile": "cypress/e2e/beforeEach-advanced.cy.js",
      "file": "cypress/e2e/beforeEach-advanced.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d843a2c-ef88-47ed-b3a3-d2da969644c1",
          "title": "Advanced beforeEach test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Type email check conditions",
              "fullTitle": "Advanced beforeEach test Type email check conditions",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email1').type('email@example.com').invoke('val').then(val => {\n  expect(val).to.contain('@');\n  expect(val).to.match(/\\.com$/);\n  expect(val.length).to.be.greaterThan(10);\n});",
              "err": {},
              "uuid": "99764349-5eb1-40a5-ae78-e447f8384238",
              "parentUUID": "9d843a2c-ef88-47ed-b3a3-d2da969644c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Type password check conditions",
              "fullTitle": "Advanced beforeEach test Type password check conditions",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#password1').type('Password1').invoke('val').then(val => {\n  expect(val.length).to.eq(9);\n  expect(val.startsWith('Pa')).to.be.true;\n  expect(val).not.to.contain(' ');\n});",
              "err": {},
              "uuid": "298f6569-e1f2-40ab-8656-dac0d24fb9a7",
              "parentUUID": "9d843a2c-ef88-47ed-b3a3-d2da969644c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99764349-5eb1-40a5-ae78-e447f8384238",
            "298f6569-e1f2-40ab-8656-dac0d24fb9a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 893,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ef8354bf-ca34-4cf2-a197-eeaee4a9e760",
      "title": "",
      "fullFile": "cypress/e2e/beforeEach-example.cy.js",
      "file": "cypress/e2e/beforeEach-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a8f83007-b0a3-40cf-a731-8bf13377ca46",
          "title": "Test with beforeEach",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Type email check value contains @",
              "fullTitle": "Test with beforeEach Type email check value contains @",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email1').type('email@example.com').should('have.value', 'email@example.com').invoke('val').and('contain', '@');",
              "err": {},
              "uuid": "5e12e8cb-56cd-468b-a41b-746c43dd6ab2",
              "parentUUID": "a8f83007-b0a3-40cf-a731-8bf13377ca46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Type wrong email and check it does not contain @",
              "fullTitle": "Test with beforeEach Type wrong email and check it does not contain @",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email1').type('emailexample.com').invoke('val').should('not.contain', '@');",
              "err": {},
              "uuid": "2798b30b-8cd3-4ae0-95ba-257874979de0",
              "parentUUID": "a8f83007-b0a3-40cf-a731-8bf13377ca46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Type coupon code and check length",
              "fullTitle": "Test with beforeEach Type coupon code and check length",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#couponCode1').type('12345').should('have.value', '12345').invoke('val').and('have.length', 5);",
              "err": {},
              "uuid": "a4ed04a6-77f2-4f94-98c5-74ccb87952a7",
              "parentUUID": "a8f83007-b0a3-40cf-a731-8bf13377ca46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e12e8cb-56cd-468b-a41b-746c43dd6ab2",
            "2798b30b-8cd3-4ae0-95ba-257874979de0",
            "a4ed04a6-77f2-4f94-98c5-74ccb87952a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9033953d-3347-4b3b-8ce9-65dc826239bd",
      "title": "",
      "fullFile": "cypress/e2e/button-link-example.cy.js",
      "file": "cypress/e2e/button-link-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "620b1926-0d9f-4871-8543-32b465d71c2f",
          "title": "Button and link interaction",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click link and check url + header",
              "fullTitle": "Button and link interaction Click link and check url + header",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('type').click();\ncy.url().should('include', '/commands/actions');\ncy.get('h1').should('contain.text', 'Actions');",
              "err": {},
              "uuid": "87c7359a-03dd-4b16-9ca2-c680463c974b",
              "parentUUID": "620b1926-0d9f-4871-8543-32b465d71c2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87c7359a-03dd-4b16-9ca2-c680463c974b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "45c0423a-52e9-4b1a-b725-21574532a0b2",
      "title": "",
      "fullFile": "cypress/e2e/checkbox-example.cy.js",
      "file": "cypress/e2e/checkbox-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d6f9d64-baaa-4f4b-9d90-0cc6aedc1f76",
          "title": "checkbox",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check anf uncheck checkbox",
              "fullTitle": "checkbox Check anf uncheck checkbox",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('[type=\"checkbox\"]').first().check().should('be.checked');\ncy.get('[type=\"checkbox\"]').first().uncheck().should('not.be.checked');",
              "err": {},
              "uuid": "40d05133-af95-4cff-a04f-51af97d015d3",
              "parentUUID": "2d6f9d64-baaa-4f4b-9d90-0cc6aedc1f76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40d05133-af95-4cff-a04f-51af97d015d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7f82fb55-4da5-4411-bd17-856b65aa642b",
      "title": "",
      "fullFile": "cypress/e2e/coupon-negative-example.cy.js",
      "file": "cypress/e2e/coupon-negative-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a4166ed-d982-4052-98b6-7e934a71c53f",
          "title": "Negative coupon code flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Try to submit with too short coupon code",
              "fullTitle": "Negative coupon code flow Try to submit with too short coupon code",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#couponCode1').type('12').should('have.value', '12').invoke('val').should('have.length.lessThan', 5);\ncy.contains('Submit').click();\ncy.get('.action-form').should('exist').and('be.visible');",
              "err": {},
              "uuid": "16fde5e1-59f3-4e4c-9e2d-1eca95272ce0",
              "parentUUID": "4a4166ed-d982-4052-98b6-7e934a71c53f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16fde5e1-59f3-4e4c-9e2d-1eca95272ce0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9b91f76e-e54b-4048-aa14-58348b76dfc8",
      "title": "",
      "fullFile": "cypress/e2e/coupon-positive.exemple.cy.js",
      "file": "cypress/e2e/coupon-positive.exemple.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a03d7fb5-29d6-4865-ab2b-b78625149c5a",
          "title": "Positive coupon code flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Try to submit coupon code",
              "fullTitle": "Positive coupon code flow Try to submit coupon code",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#couponCode1').type('12345').should('have.value', '12345').invoke('val').should('have.length', 5);\ncy.contains('Submit').click();\ncy.get('.action-form').should('exist').and('be.visible');",
              "err": {},
              "uuid": "fd179d9b-8056-40c1-ae63-0fd62059ceec",
              "parentUUID": "a03d7fb5-29d6-4865-ab2b-b78625149c5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd179d9b-8056-40c1-ae63-0fd62059ceec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 486,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "35f480cc-3a60-4c7e-b4fe-531c142184a6",
      "title": "",
      "fullFile": "cypress/e2e/custom-command-fixture.cy.js",
      "file": "cypress/e2e/custom-command-fixture.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a89a4ad-23b9-400c-aa13-17be34b83f87",
          "title": "Custom commands + fixture",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "logs in using cy.login() with data from user.json",
              "fullTitle": "Custom commands + fixture logs in using cy.login() with data from user.json",
              "timedOut": null,
              "duration": 943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.fixture('user').then(user => {\n  cy.login(user.email, user.password);\n});",
              "err": {},
              "uuid": "55b547b8-659f-4767-bfe7-8b6f59f3a1cb",
              "parentUUID": "2a89a4ad-23b9-400c-aa13-17be34b83f87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55b547b8-659f-4767-bfe7-8b6f59f3a1cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 943,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "450a23b6-1ba9-4cbf-84ed-d7fa660384f9",
      "title": "",
      "fullFile": "cypress/e2e/custom-command.cy.js",
      "file": "cypress/e2e/custom-command.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca22548c-aa05-4999-92bb-f3f1fa4f1154",
          "title": "Custom command example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "castom command use to fill email and password",
              "fullTitle": "Custom command example castom command use to fill email and password",
              "timedOut": null,
              "duration": 792,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.login('email@example.com', 'Password!1');",
              "err": {},
              "uuid": "aaf788cf-3931-4ae7-84e1-b2ba0f61fc37",
              "parentUUID": "ca22548c-aa05-4999-92bb-f3f1fa4f1154",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aaf788cf-3931-4ae7-84e1-b2ba0f61fc37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f7be299-2996-474c-a118-d9e75805c7ba",
      "title": "",
      "fullFile": "cypress/e2e/dropdown-example.cy.js",
      "file": "cypress/e2e/dropdown-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "791ade31-e88e-4027-8c33-68d2db8e6cb6",
          "title": "Dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select option from dropdown",
              "fullTitle": "Dropdown Select option from dropdown",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('.action-select').select('apples').should('have.value', 'fr-apples');",
              "err": {},
              "uuid": "1dc70ebf-a27b-4603-8525-4fbda8b3e88f",
              "parentUUID": "791ade31-e88e-4027-8c33-68d2db8e6cb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1dc70ebf-a27b-4603-8525-4fbda8b3e88f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3956a9c0-21d3-4bc2-8d3d-385827d94963",
      "title": "",
      "fullFile": "cypress/e2e/faker-command.cy.js",
      "file": "cypress/e2e/faker-command.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a26b939-3b15-4cd9-a36d-edb2d1c24a19",
          "title": "Random credential with custom command",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form with random email and password",
              "fullTitle": "Random credential with custom command fill form with random email and password",
              "timedOut": null,
              "duration": 1060,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.fillRandomCredentials().then(({\n  email,\n  password\n}) => {\n  expect(email).to.include('@');\n  expect(password.length).to.be.greaterThan(8);\n});",
              "err": {},
              "uuid": "7f9ea45b-cb69-4bd3-971f-32d1fb364868",
              "parentUUID": "9a26b939-3b15-4cd9-a36d-edb2d1c24a19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f9ea45b-cb69-4bd3-971f-32d1fb364868"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5950f208-289f-4c03-8976-ea46c217134e",
      "title": "",
      "fullFile": "cypress/e2e/faker-negative.cy.js",
      "file": "cypress/e2e/faker-negative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18fad82d-c5d9-487c-b86a-f60142e36e5e",
          "title": "Negative test with faker data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fills form with invalid email and too short password",
              "fullTitle": "Negative test with faker data fills form with invalid email and too short password",
              "timedOut": null,
              "duration": 785,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\nconst invalidEmail = 'emailexample.com';\ncy.get('#email1').type(invalidEmail).should('have.value', invalidEmail).and('not.have.value', '@');\nconst shortPassword = _faker.faker.internet.password({\n  length: 6\n});\ncy.get('#password1').type(shortPassword).should('have.value', shortPassword).then(val => {\n  expect(val.length).to.be.lessThan(8);\n});",
              "err": {},
              "uuid": "bd074193-cece-4d47-88af-6f1d51ca5a31",
              "parentUUID": "18fad82d-c5d9-487c-b86a-f60142e36e5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd074193-cece-4d47-88af-6f1d51ca5a31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 785,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c27cacec-eb71-4c3f-bff9-7fc6163ae3d9",
      "title": "",
      "fullFile": "cypress/e2e/faker-user.cy.js",
      "file": "cypress/e2e/faker-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22837e6a-9fb5-4a55-899c-d12772e45708",
          "title": "Dynamic data with faker",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "generate random email and password and fill the form",
              "fullTitle": "Dynamic data with faker generate random email and password and fill the form",
              "timedOut": null,
              "duration": 900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\ncy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type(email).should('have.value', email);\ncy.get('#password1').type(password).should('have.value', password);",
              "err": {},
              "uuid": "b303b64e-848b-49a7-af4b-0832888b95d7",
              "parentUUID": "22837e6a-9fb5-4a55-899c-d12772e45708",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b303b64e-848b-49a7-af4b-0832888b95d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c5805bb1-a5e3-4f1e-a559-039c36e92a12",
      "title": "",
      "fullFile": "cypress/e2e/first_test.cy.js",
      "file": "cypress/e2e/first_test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "841ed82f-f87e-4030-9407-a617d57f6cd8",
          "title": "First Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the Cypress example page",
              "fullTitle": "First Test Visits the Cypress example page",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('type').click();\ncy.url().should('include', '/commands/actions');",
              "err": {},
              "uuid": "bbae4ec0-25f4-443d-b244-36234c4cc4dc",
              "parentUUID": "841ed82f-f87e-4030-9407-a617d57f6cd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbae4ec0-25f4-443d-b244-36234c4cc4dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5259102-fd40-47ef-8e2d-a6570f31d4be",
      "title": "",
      "fullFile": "cypress/e2e/fixture-alias-user.cy.js",
      "file": "cypress/e2e/fixture-alias-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d4f7d3b4-c7c7-4093-888e-f1e90e04018d",
          "title": "Fixture alias example - user login data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses fixture alias to fill email and password fields",
              "fullTitle": "Fixture alias example - user login data uses fixture alias to fill email and password fields",
              "timedOut": null,
              "duration": 950,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type(this.userData.email).should('have.value', this.userData.email);\ncy.get('#password1').type(this.userData.password).should('have.value', this.userData.password);",
              "err": {},
              "uuid": "c2d79b86-7067-4630-8870-8e1aefbaad1d",
              "parentUUID": "d4f7d3b4-c7c7-4093-888e-f1e90e04018d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2d79b86-7067-4630-8870-8e1aefbaad1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5340ab7a-14e3-4bab-b7e1-1480833bb6b8",
      "title": "",
      "fullFile": "cypress/e2e/fixture-faker-alias.cy.js",
      "file": "cypress/e2e/fixture-faker-alias.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a638711-23ee-425a-875e-7ff9a10d7dc6",
          "title": "Fixture + Faker with beforeEach alias",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fills form with email from fixture and password from faker",
              "fullTitle": "Fixture + Faker with beforeEach alias fills form with email from fixture and password from faker",
              "timedOut": null,
              "duration": 881,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type(this.userData.email).should('have.value', this.userData.email);\ncy.get('#password1').type(this.randomPassword).should('have.value', this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);",
              "err": {},
              "uuid": "2940561c-f946-427c-9f8c-45fb6356378f",
              "parentUUID": "2a638711-23ee-425a-875e-7ff9a10d7dc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2940561c-f946-427c-9f8c-45fb6356378f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e373c2c7-23c3-4fa3-9bdf-3502b7475926",
      "title": "",
      "fullFile": "cypress/e2e/fixture-faker.cy.js",
      "file": "cypress/e2e/fixture-faker.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57ca0409-349a-429c-a67b-4b17784590ac",
          "title": "fixture + Faker example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses email from fixture and password from faker",
              "fullTitle": "fixture + Faker example uses email from fixture and password from faker",
              "timedOut": null,
              "duration": 957,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.fixture('user').then(user => {\n  cy.get('#email1').type(user.email).should('have.value', user.email);\n  const password = _faker.faker.internet.password({\n    length: 10\n  });\n  cy.get('#password1').type(password).should('have.value', password);\n  expect(password.length).to.be.greaterThan(8);\n});",
              "err": {},
              "uuid": "f33e438e-9de4-4283-b7c1-968050c44318",
              "parentUUID": "57ca0409-349a-429c-a67b-4b17784590ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f33e438e-9de4-4283-b7c1-968050c44318"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 957,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1b663e9c-ed77-47d4-b7fa-599009499d71",
      "title": "",
      "fullFile": "cypress/e2e/fixture-user.cy.js",
      "file": "cypress/e2e/fixture-user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4555f108-0f82-408a-ac65-5ff5362b2b7d",
          "title": "Fixture example, use login data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "load user data from fixture",
              "fullTitle": "Fixture example, use login data load user data from fixture",
              "timedOut": null,
              "duration": 919,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.fixture('user').then(user => {\n  cy.get('#email1').type(user.email).should('have.value', user.email);\n  cy.get('#password1').type(user.password).should('have.value', user.password);\n});",
              "err": {},
              "uuid": "7e7fa709-a16c-4794-98f2-b8cfae4ab272",
              "parentUUID": "4555f108-0f82-408a-ac65-5ff5362b2b7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e7fa709-a16c-4794-98f2-b8cfae4ab272"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 919,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99d590ea-f75f-4680-b5f7-35e24c3e4d5e",
      "title": "",
      "fullFile": "cypress/e2e/form-simulated-example.cy.js",
      "file": "cypress/e2e/form-simulated-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1da558f4-6329-48ef-b936-5dc9c7b57ea7",
          "title": "Simulated form flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fill fields and submit",
              "fullTitle": "Simulated form flow Fill fields and submit",
              "timedOut": null,
              "duration": 1211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type('email@example.com').should('have.value', 'email@example.com');\ncy.get('#password1').type('Password123@').should('have.value', 'Password123@');\ncy.get('[value=\"checkbox1\"]').check().should('be.checked');\ncy.get('.action-select').select('apples').should('have.value', 'fr-apples');\ncy.contains('Submit').click();\ncy.get('.action-form').should('exist').and('be.visible');",
              "err": {},
              "uuid": "b89f1bf7-7ae5-497d-9c97-214ada3b3f27",
              "parentUUID": "1da558f4-6329-48ef-b936-5dc9c7b57ea7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b89f1bf7-7ae5-497d-9c97-214ada3b3f27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "33a72a9c-7f9c-4530-b732-97cd5bd2d442",
      "title": "",
      "fullFile": "cypress/e2e/network-dynamic-stub.cy.js",
      "file": "cypress/e2e/network-dynamic-stub.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f10cf7ab-d364-47b7-9595-cb144f8885df",
          "title": "Dynamic stubbing of GET requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns different responses depending on URL id",
              "fullTitle": "Dynamic stubbing of GET requests returns different responses depending on URL id",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.intercept('GET', '**/comments/*', req => {\n  const id = req.url.split('/').pop();\n  if (id === '1') {\n    req.reply({\n      statusCode: 200,\n      body: {\n        id: 1,\n        name: 'QA Bot',\n        body: 'First stubbed comment'\n      }\n    });\n  } else if (id === '2') {\n    req.reply({\n      statusCode: 200,\n      body: {\n        id: 2,\n        name: 'QA Bot',\n        body: 'Second stubbed comment'\n      }\n    });\n  } else {\n    req.reply({\n      statusCode: 200,\n      body: {\n        id,\n        name: 'QA Bot',\n        body: 'Fallback stub'\n      }\n    });\n  }\n}).as('getComment');\ncy.contains('Get Comment').click();\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);\ncy.get('.network-comment').invoke('text').then(text => {\n  const t = text.trim();\n  expect(/First stubbed comment|Second stubbed comment|Fallback stub/.test(t), `unexpected text: \"${t}\"`).to.be.true;\n});",
              "err": {},
              "uuid": "4c49f087-21d4-409c-952a-a5aa79a45874",
              "parentUUID": "f10cf7ab-d364-47b7-9595-cb144f8885df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c49f087-21d4-409c-952a-a5aa79a45874"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3f946b0c-0dd2-4e6f-ace0-015f51e3375b",
      "title": "",
      "fullFile": "cypress/e2e/network-get.cy.js",
      "file": "cypress/e2e/network-get.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c060b10-6dce-4d7c-b6f3-e54bc817a19c",
          "title": "Network requests - GET (diagnostic)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "intercepts GET /comments/{id} and asserts status + DOM",
              "fullTitle": "Network requests - GET (diagnostic) intercepts GET /comments/{id} and asserts status + DOM",
              "timedOut": null,
              "duration": 724,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\n// 1) Upewnij się, że jesteś na właściwej stronie\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\n// 2) Intercept z REGEX-em (łapie np. .../comments/1, /comments/123)\ncy.intercept({\n  method: 'GET',\n  url: /\\/comments\\/\\d+$/\n}).as('getComment');\n// 3) Klik — najpierw przewiń i upewnij się, że widać\ncy.contains('Get Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\n// 4) Czekaj na request (dłuższy timeout na wszelki wypadek) i zaloguj szczegóły\ncy.wait('@getComment', {\n  timeout: 10000\n}).then(interception => {\n  cy.log('METHOD: ' + interception.request.method);\n  cy.log('URL: ' + interception.request.url);\n  cy.log('STATUS: ' + interception.response.statusCode);\n  expect(interception.response.statusCode).to.equal(200);\n});\n// 5) UI powinno mieć treść komentarza\ncy.get('.network-comment', {\n  timeout: 10000\n}).invoke('text').then(t => expect(t.trim()).to.not.equal(''));",
              "err": {},
              "uuid": "f5ddd88d-db2e-4a89-a9ba-49121c364209",
              "parentUUID": "4c060b10-6dce-4d7c-b6f3-e54bc817a19c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5ddd88d-db2e-4a89-a9ba-49121c364209"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ffd76644-514a-40ae-8d20-7af95af25a7d",
      "title": "",
      "fullFile": "cypress/e2e/network-multiple-requests.cy.js",
      "file": "cypress/e2e/network-multiple-requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "011d0df1-c47b-4454-b55c-0586106ae775",
          "title": "Multiple network requests with aliases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "waits for GET and POST sequentially",
              "fullTitle": "Multiple network requests with aliases waits for GET and POST sequentially",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.intercept('GET', '**/comments/*').as('getComment');\ncy.intercept('POST', '**/comments').as('postComment');\ncy.contains('Get Comment').click();\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);\ncy.contains('Post Comment').click();\ncy.wait('@postComment').its('response.statusCode').should('eq', 201);\ncy.get('.network-comment').should('not.be.empty');\ncy.get('.network-post-comment').should('contain.text', 'POST successful!');",
              "err": {},
              "uuid": "117d054f-7046-4b00-9cf0-de6201456f28",
              "parentUUID": "011d0df1-c47b-4454-b55c-0586106ae775",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "117d054f-7046-4b00-9cf0-de6201456f28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 662,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75ea00e9-a3e2-4ed3-807e-bf5139126799",
      "title": "",
      "fullFile": "cypress/e2e/network-post.cy.js",
      "file": "cypress/e2e/network-post.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "853c539f-e363-433d-a6b2-e9b11f0058de",
          "title": "Network requests - POST example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "intercepts POST /comments and checks status + UI",
              "fullTitle": "Network requests - POST example intercepts POST /comments and checks status + UI",
              "timedOut": null,
              "duration": 431,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1) wejście na stronę\ncy.visit('https://example.cypress.io/commands/network-requests');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\n// 2) intercept POST /comments\ncy.intercept({\n  method: 'POST',\n  url: /\\/comments$/\n}).as('postComment');\n// 3) klik w przycisk Post Comment\ncy.contains('Post Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\n// 4) czekamy na request i sprawdzamy status\ncy.wait('@postComment', {\n  timeout: 10000\n}).its('response.statusCode').should('eq', 201);\n// 5) UI potwierdzenie\ncy.get('.network-post-comment', {\n  timeout: 10000\n}).should('contain.text', 'POST successful!');",
              "err": {},
              "uuid": "5170d7d7-7465-4972-8158-d14361aa6d1a",
              "parentUUID": "853c539f-e363-433d-a6b2-e9b11f0058de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5170d7d7-7465-4972-8158-d14361aa6d1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3e931f7-9a6c-4bcc-91a1-1a609a994e69",
      "title": "",
      "fullFile": "cypress/e2e/network-stub-example.cy.js",
      "file": "cypress/e2e/network-stub-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e812a3a-fb73-49ec-a43e-6318fdea1e7e",
          "title": "Network stubbing with cy.intercept",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "forces network error for POST and validates via alias + UI",
              "fullTitle": "Network stubbing with cy.intercept forces network error for POST and validates via alias + UI",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.intercept('POST', '**/comments', {\n  forceNetworkError: true\n}).as('postStub');\ncy.contains('Post Comment').click();\ncy.wait('@postStub').its('error').should('exist');\ncy.get('.network-post-comment', {\n  timeout: 10000\n}).should($el => {\n  const text = $el.text().trim();\n  expect(text === '' || text === 'POST failed!').to.be.true;\n});",
              "err": {},
              "uuid": "b1558a3e-f634-43e1-a3ac-0afae82ff0a1",
              "parentUUID": "5e812a3a-fb73-49ec-a43e-6318fdea1e7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1558a3e-f634-43e1-a3ac-0afae82ff0a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 263,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0bcfd143-13c5-476b-b97f-807ef4944c83",
      "title": "",
      "fullFile": "cypress/e2e/network-stub.cy.js",
      "file": "cypress/e2e/network-stub.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "222b9e68-4fce-4482-b4a5-fe694ca35f76",
          "title": "Network requests - stubbed error",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "stubs POST /comments with 500 and validates via alias + minimal UI",
              "fullTitle": "Network requests - stubbed error stubs POST /comments with 500 and validates via alias + minimal UI",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1) Wejście na stronę i sanity-check nagłówka\ncy.visit('https://example.cypress.io/commands/network-requests');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Network Requests');\n// 2) Stub POST /comments → 500 (kontrolujemy backend)\ncy.intercept('POST', /\\/comments$/, {\n  statusCode: 500,\n  body: {}\n}).as('postStub');\n// 3) Klik w \"Post Comment\" po upewnieniu się, że widać przycisk\ncy.contains('Post Comment', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\n// 4) Czekamy na alias i asercja statusu (to jest źródło prawdy)\ncy.wait('@postStub', {\n  timeout: 10000\n}).its('response.statusCode').should('eq', 500);\n// 5) UI: demo nie pokazuje treści dla 500, więc tylko istnienie kontenera\ncy.get('.network-post-comment', {\n  timeout: 10000\n}).should('exist');",
              "err": {},
              "uuid": "04588c31-a5eb-4706-be50-bbd34e0e0140",
              "parentUUID": "222b9e68-4fce-4482-b4a5-fe694ca35f76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04588c31-a5eb-4706-be50-bbd34e0e0140"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "26bbc2f3-3926-4c1c-841a-afea776ec4d3",
      "title": "",
      "fullFile": "cypress/e2e/password-field.cy.js",
      "file": "cypress/e2e/password-field.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9053477b-d580-4ec2-9deb-55921cc53eda",
          "title": "Password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Type password and check length",
              "fullTitle": "Password Type password and check length",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions').get('#password1').type('Password123$').should('have.value', 'Password123$').invoke('val').should('have.length', 12);",
              "err": {},
              "uuid": "a27d7c8d-0703-4185-a690-6fca88cefa0c",
              "parentUUID": "9053477b-d580-4ec2-9deb-55921cc53eda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a27d7c8d-0703-4185-a690-6fca88cefa0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2ca9c8ec-327f-4699-bd89-6d53faf031f6",
      "title": "",
      "fullFile": "cypress/e2e/radio-example.cy.js",
      "file": "cypress/e2e/radio-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a248d08-fff2-4afe-ae99-17c5f84ef03a",
          "title": "Radiobutton",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and uncheck radiobutton",
              "fullTitle": "Radiobutton Check and uncheck radiobutton",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#optionsRadios1').check().should('be.checked');\ncy.get('#optionsRadios2').should('not.be.checked');\ncy.get('#optionsRadios2').check().should('be.checked');\ncy.get('#optionsRadios1').should('not.be.checked');",
              "err": {},
              "uuid": "0d976e95-ca92-4a7f-9c0d-ab96a0419fd1",
              "parentUUID": "1a248d08-fff2-4afe-ae99-17c5f84ef03a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d976e95-ca92-4a7f-9c0d-ab96a0419fd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "20c7381a-ee68-4aff-aea3-08ba884893c2",
      "title": "",
      "fullFile": "cypress/e2e/stability-antipatterns.cy.js",
      "file": "cypress/e2e/stability-antipatterns.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "386f0364-69ec-4954-a576-582409019d32",
          "title": "Stabilit: anit-patern",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "bad habits (expected to be flaky)",
              "fullTitle": "Stabilit: anit-patern bad habits (expected to be flaky)",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.wait(2000);\ncy.get('ul li:nth-child(3) a').click();\ncy.get('.non-existent-or-hidden-button').click({\n  force: true\n});\ncy.get('#email1').then($el => {\n  expect($el.val()).to.equal('stable@example.com');\n});",
              "err": {},
              "uuid": "340af5c9-e13c-497d-93e1-9b8b2004dda5",
              "parentUUID": "386f0364-69ec-4954-a576-582409019d32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "good habits (stable version",
              "fullTitle": "Stabilit: anit-patern good habits (stable version",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('type', {\n  timeout: 10000\n}).scrollIntoView().should('be.visible').click();\ncy.url().should('include', '/commands/actions');\ncy.get('#email1').should('not.be.disabled').and('be.visible').type('email@example.com', {\n  delay: 0\n}).should('have.value', 'email@example.com');",
              "err": {},
              "uuid": "d7f05d11-e84e-496b-9df3-fdb3eede5263",
              "parentUUID": "386f0364-69ec-4954-a576-582409019d32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7f05d11-e84e-496b-9df3-fdb3eede5263"
          ],
          "failures": [],
          "pending": [
            "340af5c9-e13c-497d-93e1-9b8b2004dda5"
          ],
          "skipped": [],
          "duration": 489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6545ca6c-5501-4413-969b-bda8076b4b06",
      "title": "",
      "fullFile": "cypress/e2e/stability-network-wait.cy.js",
      "file": "cypress/e2e/stability-network-wait.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "409cad50-2850-458f-9f17-7deea1c8a563",
          "title": "Stability: waiting for network",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "uses cy.intercept and cy.wait for a GET request",
              "fullTitle": "Stability: waiting for network uses cy.intercept and cy.wait for a GET request",
              "timedOut": null,
              "duration": 824,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.intercept('GET', '**/comments/*').as('getComment');\ncy.contains('Get Comment').click();\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);\ncy.get('.network-comment').should('contain.text', 'laudantium');",
              "err": {},
              "uuid": "f38122e1-2f2e-43ec-b4e0-d0f100787599",
              "parentUUID": "409cad50-2850-458f-9f17-7deea1c8a563",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "uses cy.intercept and cy.wait for a POST request",
              "fullTitle": "Stability: waiting for network uses cy.intercept and cy.wait for a POST request",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/network-requests');\ncy.intercept('POST', '**/comments').as('postComment');\ncy.contains('Post Comment').click();\ncy.wait('@postComment').its('response.statusCode').should('eq', 201);\ncy.get('.network-post-comment').should('contain.text', 'POST successful!');",
              "err": {},
              "uuid": "3df65d82-3173-48ad-92e0-b5785e4f9040",
              "parentUUID": "409cad50-2850-458f-9f17-7deea1c8a563",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f38122e1-2f2e-43ec-b4e0-d0f100787599",
            "3df65d82-3173-48ad-92e0-b5785e4f9040"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4e4f821-d673-40b5-977d-728ea6343ba4",
      "title": "",
      "fullFile": "cypress/e2e/stability-timeout-example.cy.js",
      "file": "cypress/e2e/stability-timeout-example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "508922c9-1eac-4ac7-868e-84b6e9f129c9",
          "title": "Stability: timeouts and retries",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "navigates without hard waits and asserts with custom timeouts",
              "fullTitle": "Stability: timeouts and retries navigates without hard waits and asserts with custom timeouts",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('type', {\n  timeout: 10000\n}).click();\ncy.url().should('include', '/commands/actions');\ncy.get('h1', {\n  timeout: 10000\n}).should('contain.text', 'Actions');\ncy.get('#email1', {\n  timeout: 10000\n}).should('be.visible').and('not.be.disabled');\ncy.get('#email1').type('stable@example.com', {\n  delay: 0\n}).should('have.value', 'stable@example.com');",
              "err": {},
              "uuid": "7cb89f89-b5cb-491f-9cfa-40e8d835d1d9",
              "parentUUID": "508922c9-1eac-4ac7-868e-84b6e9f129c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cb89f89-b5cb-491f-9cfa-40e8d835d1d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "afcbf8aa-9842-4bb6-ac5d-24e07c42c911",
      "title": "",
      "fullFile": "cypress/e2e/test_chain.cy.js",
      "file": "cypress/e2e/test_chain.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "227ef1b8-4182-4baa-8f9e-a8d3be868a66",
          "title": "Chainde command example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "types into input, check URL, and submit",
              "fullTitle": "Chainde command example types into input, check URL, and submit",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#couponCode1').type('1234567').should('have.value', '1234567');\ncy.url().should('include', '/actions');\ncy.contains('Submit').click();\ncy.get('#couponCode1').should('exist');\ncy.get('form.action-form').should('exist');\ncy.contains('Submit').should('be.visible');",
              "err": {},
              "uuid": "fc444d12-0f6f-46a0-b5ff-0944fa8a6715",
              "parentUUID": "227ef1b8-4182-4baa-8f9e-a8d3be868a66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc444d12-0f6f-46a0-b5ff-0944fa8a6715"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6ffb81e1-d160-4f4c-8f1c-d0b02a595488",
      "title": "",
      "fullFile": "cypress/e2e/test_contains.cy.js",
      "file": "cypress/e2e/test_contains.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21791b3e-63cd-423f-b689-0d0f28892a4b",
          "title": "Contain Exemple",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find element by text",
              "fullTitle": "Contain Exemple Find element by text",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io');\ncy.contains('type').click();\ncy.url().should('include', '/commands/actions');",
              "err": {},
              "uuid": "cb1960a3-f915-4d9a-9bf4-7e672507d598",
              "parentUUID": "21791b3e-63cd-423f-b689-0d0f28892a4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb1960a3-f915-4d9a-9bf4-7e672507d598"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 326,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c66649a6-f2b7-4b8a-a5c6-94f754d2cbc4",
      "title": "",
      "fullFile": "cypress/e2e/test_get_clicks.cy.js",
      "file": "cypress/e2e/test_get_clicks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c46027e-cee1-4ab4-b3a6-1ef49f56cd7b",
          "title": "Get and click Submit",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Find a button and click it",
              "fullTitle": "Get and click Submit Find a button and click it",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#submit').click();",
              "err": {},
              "uuid": "3f5d067f-2360-4632-a09d-09d14d479166",
              "parentUUID": "0c46027e-cee1-4ab4-b3a6-1ef49f56cd7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f5d067f-2360-4632-a09d-09d14d479166"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 294,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7fc253cb-87d5-4920-9ded-7d7cecaa8df0",
      "title": "",
      "fullFile": "cypress/e2e/test_pause-and-debyg.cy.js",
      "file": "cypress/e2e/test_pause-and-debyg.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eafc7dfd-ef7a-4050-9010-abfb0ca97d16",
          "title": "Debug and screenshots example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "logs, debugs and takes screenshots",
              "fullTitle": "Debug and screenshots example logs, debugs and takes screenshots",
              "timedOut": null,
              "duration": 4805,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#couponCode1').type('HELLO-CYPRESS').should('have.value', 'HELLO-CYPRESS').then($input => {\n  cy.log('Typed value: ' + $input.val());\n});\ncy.get('#couponCode1').debug();\ncy.screenshot('full-page');\ncy.get('#couponCode1').screenshot('coupon-input');",
              "err": {},
              "uuid": "ac49296d-0e3d-4939-80a4-778e0606c3de",
              "parentUUID": "eafc7dfd-ef7a-4050-9010-abfb0ca97d16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac49296d-0e3d-4939-80a4-778e0606c3de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4805,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7accb9f3-edfc-46e2-ad39-68a038c8ad54",
      "title": "",
      "fullFile": "cypress/e2e/test_should.cy.js",
      "file": "cypress/e2e/test_should.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bca3f11e-096e-4022-b0f3-5c845fc1da5c",
          "title": "Should Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if element is visible",
              "fullTitle": "Should Example Check if element is visible",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#password1').should('be.visible').type('Password123@').should('have.value', 'Password123@');",
              "err": {},
              "uuid": "738500f7-b72e-40f7-8cb3-1da34e7cba23",
              "parentUUID": "bca3f11e-096e-4022-b0f3-5c845fc1da5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "738500f7-b72e-40f7-8cb3-1da34e7cba23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "65bafc91-fbd4-4b8e-a574-1d0d43a3954d",
      "title": "",
      "fullFile": "cypress/e2e/test_type.cy.js",
      "file": "cypress/e2e/test_type.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ef30970-16d1-4586-a252-04088f423c30",
          "title": "Input in field",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fill email field",
              "fullTitle": "Input in field Fill email field",
              "timedOut": null,
              "duration": 507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type('text@example.pl').should('have.value', 'text@example.pl');",
              "err": {},
              "uuid": "e211bc58-b638-4631-a5dc-c951d9c975e1",
              "parentUUID": "7ef30970-16d1-4586-a252-04088f423c30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e211bc58-b638-4631-a5dc-c951d9c975e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "080335d7-843d-48d2-b4c2-7cc86b9b6aa2",
      "title": "",
      "fullFile": "cypress/e2e/then_custom_assertions.cy.js",
      "file": "cypress/e2e/then_custom_assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac8c6b9d-c957-491e-af42-f55368568094",
          "title": "Using .then() with custom asertion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "types into input and checks value with expect",
              "fullTitle": "Using .then() with custom asertion types into input and checks value with expect",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/actions');\ncy.get('#email1').type('test@email.com').then($input => {\n  const val = $input.val();\n  expect(val).to.contain('@');\n  expect(val).to.match(/\\.com$/);\n});",
              "err": {},
              "uuid": "e5289630-995d-49dd-956d-a8b301edd058",
              "parentUUID": "ac8c6b9d-c957-491e-af42-f55368568094",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5289630-995d-49dd-956d-a8b301edd058"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4a42828-48f1-497b-ace8-9860e3dbc12d",
      "title": "",
      "fullFile": "cypress/e2e/actions-page.cy.js",
      "file": "cypress/e2e/actions-page.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
          "title": "Page Object example - Actions page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "fill form using Page Object",
              "fullTitle": "Page Object example - Actions page fill form using Page Object",
              "timedOut": null,
              "duration": 1227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.fillCredentials(this.userData.email, this.randomPassword);\nexpect(this.randomPassword.length).to.be.greaterThan(7);\nactionsPage.submitForm();\nactionsPage.checkSubmitButton();",
              "err": {},
              "uuid": "3ed954df-19be-495b-bc0c-f1c57a837dc0",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is enabled by default",
              "fullTitle": "Page Object example - Actions page should detect Submit button is enabled by default",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "a129a30f-5b86-42a4-b506-e7e60bb99865",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should detect Submit button is disabled after simulation",
              "fullTitle": "Page Object example - Actions page should detect Submit button is disabled after simulation",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});",
              "err": {},
              "uuid": "75ab2c94-407b-4977-aa99-157fc04a2837",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should enable Submit button after disabling it",
              "fullTitle": "Page Object example - Actions page should enable Submit button after disabling it",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "actionsPage.disabledSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.true;\n});\nactionsPage.enableSubmit();\nactionsPage.isSubmitDisabled().then(disabled => {\n  expect(disabled).to.be.false;\n});",
              "err": {},
              "uuid": "5ae42857-b891-4449-bb9b-9a81de1c9b31",
              "parentUUID": "237cc496-8f5f-4ffc-b899-42280a4c4ecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ed954df-19be-495b-bc0c-f1c57a837dc0",
            "a129a30f-5b86-42a4-b506-e7e60bb99865",
            "75ab2c94-407b-4977-aa99-157fc04a2837",
            "5ae42857-b891-4449-bb9b-9a81de1c9b31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1695,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}